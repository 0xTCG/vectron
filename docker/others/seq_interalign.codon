from random import randint
from math import inf
from bio import *

import time

@inter_align
def orig(T, params):     
    with time.timing("total"):    
        for t in T:
            query, target = t
            aln = query.align(target, a=params["a"], b=params["b"], ambig=params["ambig"], gapo=params["gapo"], gape=params["gape"], bandwidth=params["bandwidth"], score_only=True, end_bonus=params["end_bonus"])
            print(aln.score)

SEQ_NO_T = 4096
SEQ_NO_Q = 4096
params = {"a": 2, "b": 4, "ambig": 3, "gapo": 4, "gape": 2, "zdrop": 800, "bandwidth": 105, "end_bonus": 0}
seqs_x = [s"" for _ in range(SEQ_NO_T)]
f = open("/vectron/experiments_docker/data/CPP_small/seqx_4096.txt", "r")
count = 0
for i in f:
    seqs_x[count] = seq(i[:-1])
    count += 1
f.close()
f = open("/vectron/experiments_docker/data/CPP_small/seqy_4096.txt", "r")
count = 0
seqs_y = [s"" for _ in range(SEQ_NO_Q)]    
for j in f:
    seqs_y[count] = seq(j[:-1])
    count += 1
f.close()
T = zip(seqs_x, seqs_y)
print("BEGUN")
orig(T, params)
print("DONE")